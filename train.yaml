# A standard setup, specifying model architecture, training parameters, 
# and evaluation of the trained model
!Experiment # 'standard' is the name given to the experiment
  name: standard # every experiment needs a name
  # global parameters shared throughout the experiment
  exp_global: !ExpGlobal
    # {EXP_DIR} is a placeholder for the directory in which the config file lies.
    # {EXP} is a placeholder for the experiment name (here: 'standard')
    model_file: '{EXP_DIR}/models/{EXP}.mod'
    log_file: '{EXP_DIR}/logs/{EXP}.log'
    default_layer_dim: 512
    dropout: 0.3
    placeholders:
      DATA_IN_PRO: src/preprocess/preprocessed_data/en_be
      DATA_IN_SNT: src/preprocess/split_data/en_be
      DATA_OUT: src/preprocess
      SRC_LAN: be
      TAR_LAN: en
  # model architecture
  model: !DefaultTranslator
    src_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: '{DATA_IN_PRO}/train.vocab.{SRC_LAN}'
    trg_reader: !PlainTextReader
      vocab: !Vocab {vocab_file: '{DATA_IN_PRO}/train.vocab.{TAR_LAN}'
    src_embedder: !SimpleWordEmbedder
      emb_dim: 512
    encoder: !BiLSTMSeqTransducer
      layers: 1
    attender: !MlpAttender
      hidden_dim: 512
      state_dim: 512
      input_dim: 512
    decoder: !AutoRegressiveDecoder
      embedder: !SimpleWordEmbedder
        emb_dim: 512
      rnn: !UniLSTMSeqTransducer
        layers: 1
      transform: !AuxNonLinear
        output_dim: 512
        activation: 'tanh'
      bridge: !CopyBridge {}
      scorer: !Softmax {}
  # training parameters
  train: !SimpleTrainingRegimen
    batcher: !SrcBatcher
      batch_size: 32
    trainer: !AdamTrainer
      alpha: 0.001
    run_for_epochs: 20
    src_file: '{DATA_IN_SNT}/train.{SRC_LAN}'
    trg_file: '{DATA_IN_SNT}/train.{TAR_LAN}'
    dev_tasks:
      - !LossEvalTask
        src_file: '{DATA_IN_SNT}/dev.{SRC_LAN}'
        ref_file: '{DATA_IN_SNT}/dev.{TAR_LAN}'
  # final evaluation
  evaluate:
    - !AccuracyEvalTask
      eval_metrics: bleu
      src_file: '{DATA_IN_SNT}/test.{SRC_LAN}'
      ref_file: '{DATA_IN_SNT}/test.{TAR_LAN}'
      hyp_file: output/{EXP}.test_hyp